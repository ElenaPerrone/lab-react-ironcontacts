{"ast":null,"code":"var _jsxFileName = \"/home/elena/IH labs/lab-react-ironcontacts/src/Contacts.js\";\nimport React, { Component } from \"react\";\nimport contacts from \"./contacts.json\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./Contacts.css\";\n\nclass Contacts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: contacts.slice(0, 5),\n      random: contacts[Math.ceil(Math.random() * contacts.length)]\n    };\n\n    this.randomizeCelebrity = () => {\n      //adds a random clbr to the table\n      let newContactsArray = this.state.contacts.filter(contact => contact.id === this.state.random.id);\n\n      if (newContactsArray.length === 0) {\n        let newArray = this.state.contacts;\n        newArray.push(this.state.random);\n        this.setState({\n          contacts: newArray,\n          random: contacts[Math.ceil(Math.random() * contacts.length)]\n        });\n      } else {\n        this.randomizeCelebrity(); //returns to the function to add a clbr\n      }\n    };\n\n    this.sortByName = () => {\n      let newContactsArray = this.state.contacts.sort(this.state.contacts.name);\n      this.setState({\n        contacts: newContactsArray\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.randomizeCelebrity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, \"Add Random Celebrity\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: console.log(this.newContactsArray),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, \"Sort alphabetically\"), /*#__PURE__*/React.createElement(TableContainer, {\n      component: Paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      \"aria-label\": \"simple table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TableHead, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, \"Picture\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Popularity\"))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, this.state.contacts.map(contact => /*#__PURE__*/React.createElement(TableRow, {\n      key: contact.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: contact.pictureUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, contact.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, contact.popularity)))), /*#__PURE__*/React.createElement(TableBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableRow, {\n      key: this.state.random.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"image\",\n      src: this.state.random.pictureUrl,\n      alt: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }\n    }, this.state.random.name), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, this.state.random.popularity))))));\n  }\n\n}\n\nexport default Contacts;","map":{"version":3,"sources":["/home/elena/IH labs/lab-react-ironcontacts/src/Contacts.js"],"names":["React","Component","contacts","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Contacts","state","slice","random","Math","ceil","length","randomizeCelebrity","newContactsArray","filter","contact","id","newArray","push","setState","sortByName","sort","name","render","console","log","map","pictureUrl","popularity"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport contacts from \"./contacts.json\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport \"./Contacts.css\";\n\nclass Contacts extends Component {\n  state = {\n    contacts: contacts.slice(0, 5),\n    random: contacts[Math.ceil(Math.random() * contacts.length)]\n  };\n\n  randomizeCelebrity = () => {\n    //adds a random clbr to the table\n    let newContactsArray = this.state.contacts.filter(\n      contact => contact.id === this.state.random.id\n    ); \n    if (newContactsArray.length === 0) {\n      let newArray = this.state.contacts;\n      newArray.push(this.state.random);\n      this.setState({\n        contacts: newArray,\n        random: contacts[Math.ceil(Math.random() * contacts.length)]\n      });\n    } else {\n      this.randomizeCelebrity(); //returns to the function to add a clbr\n    }\n  };\n\n  sortByName = () => {\n      let newContactsArray = this.state.contacts.sort(this.state.contacts.name)\n      this.setState({\n          contacts: newContactsArray\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.randomizeCelebrity}>Add Random Celebrity</button>\n        <button onClick={console.log(this.newContactsArray)}>\n          Sort alphabetically\n        </button>\n        {/* <button onClick={console.log(this.newContactsArray)}>Sort by popularity</button> */}\n\n        <TableContainer component={Paper}>\n          <Table aria-label=\"simple table\">\n            <TableHead>\n              <TableRow>\n                <TableCell align=\"center\">Picture</TableCell>\n                <TableCell align=\"center\">Name</TableCell>\n                <TableCell align=\"center\">Popularity</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.state.contacts.map(contact => (\n                <TableRow key={contact.id}>\n                  <TableCell align=\"center\">\n                    <img className=\"image\" src={contact.pictureUrl} alt=\"\" />\n                  </TableCell>\n                  <TableCell align=\"center\">{contact.name}</TableCell>\n                  <TableCell align=\"center\">{contact.popularity}</TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableBody>\n              <TableRow key={this.state.random.id}>\n                <TableCell align=\"center\">\n                  <img\n                    className=\"image\"\n                    src={this.state.random.pictureUrl}\n                    alt=\"\"\n                  />\n                </TableCell>\n                <TableCell align=\"center\">{this.state.random.name}</TableCell>\n                <TableCell align=\"center\">\n                  {this.state.random.popularity}\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </div>\n    );\n  }\n}\n\nexport default Contacts;\n"]},"metadata":{},"sourceType":"module"}